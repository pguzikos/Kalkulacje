//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExcelWorkbook2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private kalk_podstawaDataTable tablekalk_podstawa;
        
        private v_listaKalkulacjiDataTable tablev_listaKalkulacji;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["kalk_podstawa"] != null)) {
                    base.Tables.Add(new kalk_podstawaDataTable(ds.Tables["kalk_podstawa"]));
                }
                if ((ds.Tables["v_listaKalkulacji"] != null)) {
                    base.Tables.Add(new v_listaKalkulacjiDataTable(ds.Tables["v_listaKalkulacji"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public kalk_podstawaDataTable kalk_podstawa {
            get {
                return this.tablekalk_podstawa;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public v_listaKalkulacjiDataTable v_listaKalkulacji {
            get {
                return this.tablev_listaKalkulacji;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["kalk_podstawa"] != null)) {
                    base.Tables.Add(new kalk_podstawaDataTable(ds.Tables["kalk_podstawa"]));
                }
                if ((ds.Tables["v_listaKalkulacji"] != null)) {
                    base.Tables.Add(new v_listaKalkulacjiDataTable(ds.Tables["v_listaKalkulacji"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablekalk_podstawa = ((kalk_podstawaDataTable)(base.Tables["kalk_podstawa"]));
            if ((initTable == true)) {
                if ((this.tablekalk_podstawa != null)) {
                    this.tablekalk_podstawa.InitVars();
                }
            }
            this.tablev_listaKalkulacji = ((v_listaKalkulacjiDataTable)(base.Tables["v_listaKalkulacji"]));
            if ((initTable == true)) {
                if ((this.tablev_listaKalkulacji != null)) {
                    this.tablev_listaKalkulacji.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablekalk_podstawa = new kalk_podstawaDataTable();
            base.Tables.Add(this.tablekalk_podstawa);
            this.tablev_listaKalkulacji = new v_listaKalkulacjiDataTable();
            base.Tables.Add(this.tablev_listaKalkulacji);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializekalk_podstawa() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializev_listaKalkulacji() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void kalk_podstawaRowChangeEventHandler(object sender, kalk_podstawaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void v_listaKalkulacjiRowChangeEventHandler(object sender, v_listaKalkulacjiRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class kalk_podstawaDataTable : global::System.Data.TypedTableBase<kalk_podstawaRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnindeks;
            
            private global::System.Data.DataColumn columnnrZapytania;
            
            private global::System.Data.DataColumn columnklient;
            
            private global::System.Data.DataColumn columntrudnosc;
            
            private global::System.Data.DataColumn columnnrRys;
            
            private global::System.Data.DataColumn columnrewizja;
            
            private global::System.Data.DataColumn columniloscNaKpl;
            
            private global::System.Data.DataColumn columnwielkoscZam;
            
            private global::System.Data.DataColumn columnwielkoscProd;
            
            private global::System.Data.DataColumn columngrMat;
            
            private global::System.Data.DataColumn columnwymY;
            
            private global::System.Data.DataColumn columnwymX;
            
            private global::System.Data.DataColumn columnrodzajMat;
            
            private global::System.Data.DataColumn columngestosc;
            
            private global::System.Data.DataColumn columnsztukArk;
            
            private global::System.Data.DataColumn columnnorma;
            
            private global::System.Data.DataColumn columncenaKg;
            
            private global::System.Data.DataColumn columnwartoscMat;
            
            private global::System.Data.DataColumn columniloscUd;
            
            private global::System.Data.DataColumn columnudSek;
            
            private global::System.Data.DataColumn columnczasNaZal;
            
            private global::System.Data.DataColumn columnCPZ;
            
            private global::System.Data.DataColumn columnwspSoc;
            
            private global::System.Data.DataColumn columnCenaRbh;
            
            private global::System.Data.DataColumn columnwartoscWykrawania;
            
            private global::System.Data.DataColumn columnczasUsunieciaMicro;
            
            private global::System.Data.DataColumn columnwartoscGratowania;
            
            private global::System.Data.DataColumn columngratowanie;
            
            private global::System.Data.DataColumn columnnkj;
            
            private global::System.Data.DataColumn columnnormaWartosc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaDataTable() {
                this.TableName = "kalk_podstawa";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal kalk_podstawaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected kalk_podstawaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn indeksColumn {
                get {
                    return this.columnindeks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nrZapytaniaColumn {
                get {
                    return this.columnnrZapytania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn klientColumn {
                get {
                    return this.columnklient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn trudnoscColumn {
                get {
                    return this.columntrudnosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nrRysColumn {
                get {
                    return this.columnnrRys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rewizjaColumn {
                get {
                    return this.columnrewizja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iloscNaKplColumn {
                get {
                    return this.columniloscNaKpl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wielkoscZamColumn {
                get {
                    return this.columnwielkoscZam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wielkoscProdColumn {
                get {
                    return this.columnwielkoscProd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn grMatColumn {
                get {
                    return this.columngrMat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wymYColumn {
                get {
                    return this.columnwymY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wymXColumn {
                get {
                    return this.columnwymX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rodzajMatColumn {
                get {
                    return this.columnrodzajMat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gestoscColumn {
                get {
                    return this.columngestosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sztukArkColumn {
                get {
                    return this.columnsztukArk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn normaColumn {
                get {
                    return this.columnnorma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cenaKgColumn {
                get {
                    return this.columncenaKg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wartoscMatColumn {
                get {
                    return this.columnwartoscMat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iloscUdColumn {
                get {
                    return this.columniloscUd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn udSekColumn {
                get {
                    return this.columnudSek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn czasNaZalColumn {
                get {
                    return this.columnczasNaZal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CPZColumn {
                get {
                    return this.columnCPZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wspSocColumn {
                get {
                    return this.columnwspSoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CenaRbhColumn {
                get {
                    return this.columnCenaRbh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wartoscWykrawaniaColumn {
                get {
                    return this.columnwartoscWykrawania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn czasUsunieciaMicroColumn {
                get {
                    return this.columnczasUsunieciaMicro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn wartoscGratowaniaColumn {
                get {
                    return this.columnwartoscGratowania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gratowanieColumn {
                get {
                    return this.columngratowanie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nkjColumn {
                get {
                    return this.columnnkj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn normaWartoscColumn {
                get {
                    return this.columnnormaWartosc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRow this[int index] {
                get {
                    return ((kalk_podstawaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event kalk_podstawaRowChangeEventHandler kalk_podstawaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event kalk_podstawaRowChangeEventHandler kalk_podstawaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event kalk_podstawaRowChangeEventHandler kalk_podstawaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event kalk_podstawaRowChangeEventHandler kalk_podstawaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addkalk_podstawaRow(kalk_podstawaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRow Addkalk_podstawaRow(
                        int id, 
                        string indeks, 
                        string nrZapytania, 
                        string klient, 
                        string trudnosc, 
                        string nrRys, 
                        string rewizja, 
                        string iloscNaKpl, 
                        string wielkoscZam, 
                        string wielkoscProd, 
                        string grMat, 
                        string wymY, 
                        string wymX, 
                        string rodzajMat, 
                        string gestosc, 
                        string sztukArk, 
                        string norma, 
                        string cenaKg, 
                        string wartoscMat, 
                        string iloscUd, 
                        string udSek, 
                        string czasNaZal, 
                        string CPZ, 
                        string wspSoc, 
                        string CenaRbh, 
                        string wartoscWykrawania, 
                        string czasUsunieciaMicro, 
                        string wartoscGratowania, 
                        string gratowanie, 
                        string nkj, 
                        string normaWartosc) {
                kalk_podstawaRow rowkalk_podstawaRow = ((kalk_podstawaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        indeks,
                        nrZapytania,
                        klient,
                        trudnosc,
                        nrRys,
                        rewizja,
                        iloscNaKpl,
                        wielkoscZam,
                        wielkoscProd,
                        grMat,
                        wymY,
                        wymX,
                        rodzajMat,
                        gestosc,
                        sztukArk,
                        norma,
                        cenaKg,
                        wartoscMat,
                        iloscUd,
                        udSek,
                        czasNaZal,
                        CPZ,
                        wspSoc,
                        CenaRbh,
                        wartoscWykrawania,
                        czasUsunieciaMicro,
                        wartoscGratowania,
                        gratowanie,
                        nkj,
                        normaWartosc};
                rowkalk_podstawaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowkalk_podstawaRow);
                return rowkalk_podstawaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRow FindByid(int id) {
                return ((kalk_podstawaRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                kalk_podstawaDataTable cln = ((kalk_podstawaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new kalk_podstawaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnindeks = base.Columns["indeks"];
                this.columnnrZapytania = base.Columns["nrZapytania"];
                this.columnklient = base.Columns["klient"];
                this.columntrudnosc = base.Columns["trudnosc"];
                this.columnnrRys = base.Columns["nrRys"];
                this.columnrewizja = base.Columns["rewizja"];
                this.columniloscNaKpl = base.Columns["iloscNaKpl"];
                this.columnwielkoscZam = base.Columns["wielkoscZam"];
                this.columnwielkoscProd = base.Columns["wielkoscProd"];
                this.columngrMat = base.Columns["grMat"];
                this.columnwymY = base.Columns["wymY"];
                this.columnwymX = base.Columns["wymX"];
                this.columnrodzajMat = base.Columns["rodzajMat"];
                this.columngestosc = base.Columns["gestosc"];
                this.columnsztukArk = base.Columns["sztukArk"];
                this.columnnorma = base.Columns["norma"];
                this.columncenaKg = base.Columns["cenaKg"];
                this.columnwartoscMat = base.Columns["wartoscMat"];
                this.columniloscUd = base.Columns["iloscUd"];
                this.columnudSek = base.Columns["udSek"];
                this.columnczasNaZal = base.Columns["czasNaZal"];
                this.columnCPZ = base.Columns["CPZ"];
                this.columnwspSoc = base.Columns["wspSoc"];
                this.columnCenaRbh = base.Columns["CenaRbh"];
                this.columnwartoscWykrawania = base.Columns["wartoscWykrawania"];
                this.columnczasUsunieciaMicro = base.Columns["czasUsunieciaMicro"];
                this.columnwartoscGratowania = base.Columns["wartoscGratowania"];
                this.columngratowanie = base.Columns["gratowanie"];
                this.columnnkj = base.Columns["nkj"];
                this.columnnormaWartosc = base.Columns["normaWartosc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnindeks = new global::System.Data.DataColumn("indeks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnindeks);
                this.columnnrZapytania = new global::System.Data.DataColumn("nrZapytania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnrZapytania);
                this.columnklient = new global::System.Data.DataColumn("klient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnklient);
                this.columntrudnosc = new global::System.Data.DataColumn("trudnosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrudnosc);
                this.columnnrRys = new global::System.Data.DataColumn("nrRys", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnrRys);
                this.columnrewizja = new global::System.Data.DataColumn("rewizja", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrewizja);
                this.columniloscNaKpl = new global::System.Data.DataColumn("iloscNaKpl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniloscNaKpl);
                this.columnwielkoscZam = new global::System.Data.DataColumn("wielkoscZam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwielkoscZam);
                this.columnwielkoscProd = new global::System.Data.DataColumn("wielkoscProd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwielkoscProd);
                this.columngrMat = new global::System.Data.DataColumn("grMat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrMat);
                this.columnwymY = new global::System.Data.DataColumn("wymY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwymY);
                this.columnwymX = new global::System.Data.DataColumn("wymX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwymX);
                this.columnrodzajMat = new global::System.Data.DataColumn("rodzajMat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrodzajMat);
                this.columngestosc = new global::System.Data.DataColumn("gestosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngestosc);
                this.columnsztukArk = new global::System.Data.DataColumn("sztukArk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsztukArk);
                this.columnnorma = new global::System.Data.DataColumn("norma", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnorma);
                this.columncenaKg = new global::System.Data.DataColumn("cenaKg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncenaKg);
                this.columnwartoscMat = new global::System.Data.DataColumn("wartoscMat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwartoscMat);
                this.columniloscUd = new global::System.Data.DataColumn("iloscUd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniloscUd);
                this.columnudSek = new global::System.Data.DataColumn("udSek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnudSek);
                this.columnczasNaZal = new global::System.Data.DataColumn("czasNaZal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnczasNaZal);
                this.columnCPZ = new global::System.Data.DataColumn("CPZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPZ);
                this.columnwspSoc = new global::System.Data.DataColumn("wspSoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwspSoc);
                this.columnCenaRbh = new global::System.Data.DataColumn("CenaRbh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCenaRbh);
                this.columnwartoscWykrawania = new global::System.Data.DataColumn("wartoscWykrawania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwartoscWykrawania);
                this.columnczasUsunieciaMicro = new global::System.Data.DataColumn("czasUsunieciaMicro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnczasUsunieciaMicro);
                this.columnwartoscGratowania = new global::System.Data.DataColumn("wartoscGratowania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwartoscGratowania);
                this.columngratowanie = new global::System.Data.DataColumn("gratowanie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngratowanie);
                this.columnnkj = new global::System.Data.DataColumn("nkj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnkj);
                this.columnnormaWartosc = new global::System.Data.DataColumn("normaWartosc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnormaWartosc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnindeks.AllowDBNull = false;
                this.columnindeks.MaxLength = 100;
                this.columnnrZapytania.AllowDBNull = false;
                this.columnnrZapytania.MaxLength = 100;
                this.columnklient.AllowDBNull = false;
                this.columnklient.MaxLength = 100;
                this.columntrudnosc.AllowDBNull = false;
                this.columntrudnosc.MaxLength = 100;
                this.columnnrRys.AllowDBNull = false;
                this.columnnrRys.MaxLength = 100;
                this.columnrewizja.AllowDBNull = false;
                this.columnrewizja.MaxLength = 100;
                this.columniloscNaKpl.AllowDBNull = false;
                this.columniloscNaKpl.MaxLength = 100;
                this.columnwielkoscZam.AllowDBNull = false;
                this.columnwielkoscZam.MaxLength = 100;
                this.columnwielkoscProd.AllowDBNull = false;
                this.columnwielkoscProd.MaxLength = 100;
                this.columngrMat.AllowDBNull = false;
                this.columngrMat.MaxLength = 100;
                this.columnwymY.AllowDBNull = false;
                this.columnwymY.MaxLength = 100;
                this.columnwymX.AllowDBNull = false;
                this.columnwymX.MaxLength = 100;
                this.columnrodzajMat.AllowDBNull = false;
                this.columnrodzajMat.MaxLength = 100;
                this.columngestosc.AllowDBNull = false;
                this.columngestosc.MaxLength = 100;
                this.columnsztukArk.AllowDBNull = false;
                this.columnsztukArk.MaxLength = 100;
                this.columnnorma.AllowDBNull = false;
                this.columnnorma.MaxLength = 100;
                this.columncenaKg.AllowDBNull = false;
                this.columncenaKg.MaxLength = 100;
                this.columnwartoscMat.AllowDBNull = false;
                this.columnwartoscMat.MaxLength = 100;
                this.columniloscUd.AllowDBNull = false;
                this.columniloscUd.MaxLength = 100;
                this.columnudSek.AllowDBNull = false;
                this.columnudSek.MaxLength = 100;
                this.columnczasNaZal.AllowDBNull = false;
                this.columnczasNaZal.MaxLength = 100;
                this.columnCPZ.AllowDBNull = false;
                this.columnCPZ.MaxLength = 100;
                this.columnwspSoc.AllowDBNull = false;
                this.columnwspSoc.MaxLength = 100;
                this.columnCenaRbh.AllowDBNull = false;
                this.columnCenaRbh.MaxLength = 100;
                this.columnwartoscWykrawania.AllowDBNull = false;
                this.columnwartoscWykrawania.MaxLength = 150;
                this.columnczasUsunieciaMicro.AllowDBNull = false;
                this.columnczasUsunieciaMicro.MaxLength = 100;
                this.columnwartoscGratowania.AllowDBNull = false;
                this.columnwartoscGratowania.MaxLength = 100;
                this.columngratowanie.AllowDBNull = false;
                this.columngratowanie.MaxLength = 100;
                this.columnnkj.AllowDBNull = false;
                this.columnnkj.MaxLength = 100;
                this.columnnormaWartosc.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRow Newkalk_podstawaRow() {
                return ((kalk_podstawaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new kalk_podstawaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(kalk_podstawaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.kalk_podstawaRowChanged != null)) {
                    this.kalk_podstawaRowChanged(this, new kalk_podstawaRowChangeEvent(((kalk_podstawaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.kalk_podstawaRowChanging != null)) {
                    this.kalk_podstawaRowChanging(this, new kalk_podstawaRowChangeEvent(((kalk_podstawaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.kalk_podstawaRowDeleted != null)) {
                    this.kalk_podstawaRowDeleted(this, new kalk_podstawaRowChangeEvent(((kalk_podstawaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.kalk_podstawaRowDeleting != null)) {
                    this.kalk_podstawaRowDeleting(this, new kalk_podstawaRowChangeEvent(((kalk_podstawaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removekalk_podstawaRow(kalk_podstawaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "kalk_podstawaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class v_listaKalkulacjiDataTable : global::System.Data.TypedTableBase<v_listaKalkulacjiRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnNumer_Zapytania;
            
            private global::System.Data.DataColumn columnIndeks_CDN_XL;
            
            private global::System.Data.DataColumn columnNumer_Rysunku;
            
            private global::System.Data.DataColumn columnKlient;
            
            private global::System.Data.DataColumn columnWielkosc_Zamowienia;
            
            private global::System.Data.DataColumn columnWielkosc_Produkcji;
            
            private global::System.Data.DataColumn columnGrubosc_Materialu;
            
            private global::System.Data.DataColumn columnRodzaj_Materialu;
            
            private global::System.Data.DataColumn columnWymiar_X;
            
            private global::System.Data.DataColumn columnWymiar_Y;
            
            private global::System.Data.DataColumn columnRewizja;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiDataTable() {
                this.TableName = "v_listaKalkulacji";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal v_listaKalkulacjiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected v_listaKalkulacjiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Numer_ZapytaniaColumn {
                get {
                    return this.columnNumer_Zapytania;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Indeks_CDN_XLColumn {
                get {
                    return this.columnIndeks_CDN_XL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Numer_RysunkuColumn {
                get {
                    return this.columnNumer_Rysunku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlientColumn {
                get {
                    return this.columnKlient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Wielkosc_ZamowieniaColumn {
                get {
                    return this.columnWielkosc_Zamowienia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Wielkosc_ProdukcjiColumn {
                get {
                    return this.columnWielkosc_Produkcji;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Grubosc_MaterialuColumn {
                get {
                    return this.columnGrubosc_Materialu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Rodzaj_MaterialuColumn {
                get {
                    return this.columnRodzaj_Materialu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Wymiar_XColumn {
                get {
                    return this.columnWymiar_X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Wymiar_YColumn {
                get {
                    return this.columnWymiar_Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RewizjaColumn {
                get {
                    return this.columnRewizja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRow this[int index] {
                get {
                    return ((v_listaKalkulacjiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_listaKalkulacjiRowChangeEventHandler v_listaKalkulacjiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_listaKalkulacjiRowChangeEventHandler v_listaKalkulacjiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_listaKalkulacjiRowChangeEventHandler v_listaKalkulacjiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_listaKalkulacjiRowChangeEventHandler v_listaKalkulacjiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addv_listaKalkulacjiRow(v_listaKalkulacjiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRow Addv_listaKalkulacjiRow(int id, string Numer_Zapytania, string Indeks_CDN_XL, string Numer_Rysunku, string Klient, string Wielkosc_Zamowienia, string Wielkosc_Produkcji, string Grubosc_Materialu, string Rodzaj_Materialu, string Wymiar_X, string Wymiar_Y, string Rewizja) {
                v_listaKalkulacjiRow rowv_listaKalkulacjiRow = ((v_listaKalkulacjiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        Numer_Zapytania,
                        Indeks_CDN_XL,
                        Numer_Rysunku,
                        Klient,
                        Wielkosc_Zamowienia,
                        Wielkosc_Produkcji,
                        Grubosc_Materialu,
                        Rodzaj_Materialu,
                        Wymiar_X,
                        Wymiar_Y,
                        Rewizja};
                rowv_listaKalkulacjiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowv_listaKalkulacjiRow);
                return rowv_listaKalkulacjiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRow FindByid(int id) {
                return ((v_listaKalkulacjiRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                v_listaKalkulacjiDataTable cln = ((v_listaKalkulacjiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new v_listaKalkulacjiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnNumer_Zapytania = base.Columns["Numer_Zapytania"];
                this.columnIndeks_CDN_XL = base.Columns["Indeks_CDN_XL"];
                this.columnNumer_Rysunku = base.Columns["Numer_Rysunku"];
                this.columnKlient = base.Columns["Klient"];
                this.columnWielkosc_Zamowienia = base.Columns["Wielkosc_Zamowienia"];
                this.columnWielkosc_Produkcji = base.Columns["Wielkosc_Produkcji"];
                this.columnGrubosc_Materialu = base.Columns["Grubosc_Materialu"];
                this.columnRodzaj_Materialu = base.Columns["Rodzaj_Materialu"];
                this.columnWymiar_X = base.Columns["Wymiar_X"];
                this.columnWymiar_Y = base.Columns["Wymiar_Y"];
                this.columnRewizja = base.Columns["Rewizja"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnNumer_Zapytania = new global::System.Data.DataColumn("Numer_Zapytania", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumer_Zapytania);
                this.columnIndeks_CDN_XL = new global::System.Data.DataColumn("Indeks_CDN_XL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndeks_CDN_XL);
                this.columnNumer_Rysunku = new global::System.Data.DataColumn("Numer_Rysunku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumer_Rysunku);
                this.columnKlient = new global::System.Data.DataColumn("Klient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlient);
                this.columnWielkosc_Zamowienia = new global::System.Data.DataColumn("Wielkosc_Zamowienia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWielkosc_Zamowienia);
                this.columnWielkosc_Produkcji = new global::System.Data.DataColumn("Wielkosc_Produkcji", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWielkosc_Produkcji);
                this.columnGrubosc_Materialu = new global::System.Data.DataColumn("Grubosc_Materialu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrubosc_Materialu);
                this.columnRodzaj_Materialu = new global::System.Data.DataColumn("Rodzaj_Materialu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodzaj_Materialu);
                this.columnWymiar_X = new global::System.Data.DataColumn("Wymiar_X", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWymiar_X);
                this.columnWymiar_Y = new global::System.Data.DataColumn("Wymiar_Y", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWymiar_Y);
                this.columnRewizja = new global::System.Data.DataColumn("Rewizja", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRewizja);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnNumer_Zapytania.ReadOnly = true;
                this.columnNumer_Zapytania.MaxLength = 2147483647;
                this.columnIndeks_CDN_XL.ReadOnly = true;
                this.columnIndeks_CDN_XL.MaxLength = 2147483647;
                this.columnNumer_Rysunku.ReadOnly = true;
                this.columnNumer_Rysunku.MaxLength = 2147483647;
                this.columnKlient.ReadOnly = true;
                this.columnKlient.MaxLength = 2147483647;
                this.columnWielkosc_Zamowienia.ReadOnly = true;
                this.columnWielkosc_Zamowienia.MaxLength = 2147483647;
                this.columnWielkosc_Produkcji.ReadOnly = true;
                this.columnWielkosc_Produkcji.MaxLength = 2147483647;
                this.columnGrubosc_Materialu.ReadOnly = true;
                this.columnGrubosc_Materialu.MaxLength = 2147483647;
                this.columnRodzaj_Materialu.ReadOnly = true;
                this.columnRodzaj_Materialu.MaxLength = 2147483647;
                this.columnWymiar_X.ReadOnly = true;
                this.columnWymiar_X.MaxLength = 2147483647;
                this.columnWymiar_Y.ReadOnly = true;
                this.columnWymiar_Y.MaxLength = 2147483647;
                this.columnRewizja.ReadOnly = true;
                this.columnRewizja.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRow Newv_listaKalkulacjiRow() {
                return ((v_listaKalkulacjiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new v_listaKalkulacjiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(v_listaKalkulacjiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.v_listaKalkulacjiRowChanged != null)) {
                    this.v_listaKalkulacjiRowChanged(this, new v_listaKalkulacjiRowChangeEvent(((v_listaKalkulacjiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.v_listaKalkulacjiRowChanging != null)) {
                    this.v_listaKalkulacjiRowChanging(this, new v_listaKalkulacjiRowChangeEvent(((v_listaKalkulacjiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.v_listaKalkulacjiRowDeleted != null)) {
                    this.v_listaKalkulacjiRowDeleted(this, new v_listaKalkulacjiRowChangeEvent(((v_listaKalkulacjiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.v_listaKalkulacjiRowDeleting != null)) {
                    this.v_listaKalkulacjiRowDeleting(this, new v_listaKalkulacjiRowChangeEvent(((v_listaKalkulacjiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removev_listaKalkulacjiRow(v_listaKalkulacjiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "v_listaKalkulacjiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class kalk_podstawaRow : global::System.Data.DataRow {
            
            private kalk_podstawaDataTable tablekalk_podstawa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal kalk_podstawaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablekalk_podstawa = ((kalk_podstawaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablekalk_podstawa.idColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string indeks {
                get {
                    return ((string)(this[this.tablekalk_podstawa.indeksColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.indeksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nrZapytania {
                get {
                    return ((string)(this[this.tablekalk_podstawa.nrZapytaniaColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.nrZapytaniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string klient {
                get {
                    return ((string)(this[this.tablekalk_podstawa.klientColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.klientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string trudnosc {
                get {
                    return ((string)(this[this.tablekalk_podstawa.trudnoscColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.trudnoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nrRys {
                get {
                    return ((string)(this[this.tablekalk_podstawa.nrRysColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.nrRysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string rewizja {
                get {
                    return ((string)(this[this.tablekalk_podstawa.rewizjaColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.rewizjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string iloscNaKpl {
                get {
                    return ((string)(this[this.tablekalk_podstawa.iloscNaKplColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.iloscNaKplColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wielkoscZam {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wielkoscZamColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wielkoscZamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wielkoscProd {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wielkoscProdColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wielkoscProdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string grMat {
                get {
                    return ((string)(this[this.tablekalk_podstawa.grMatColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.grMatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wymY {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wymYColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wymYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wymX {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wymXColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wymXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string rodzajMat {
                get {
                    return ((string)(this[this.tablekalk_podstawa.rodzajMatColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.rodzajMatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gestosc {
                get {
                    return ((string)(this[this.tablekalk_podstawa.gestoscColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.gestoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sztukArk {
                get {
                    return ((string)(this[this.tablekalk_podstawa.sztukArkColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.sztukArkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string norma {
                get {
                    return ((string)(this[this.tablekalk_podstawa.normaColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.normaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cenaKg {
                get {
                    return ((string)(this[this.tablekalk_podstawa.cenaKgColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.cenaKgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wartoscMat {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wartoscMatColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wartoscMatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string iloscUd {
                get {
                    return ((string)(this[this.tablekalk_podstawa.iloscUdColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.iloscUdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string udSek {
                get {
                    return ((string)(this[this.tablekalk_podstawa.udSekColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.udSekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string czasNaZal {
                get {
                    return ((string)(this[this.tablekalk_podstawa.czasNaZalColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.czasNaZalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CPZ {
                get {
                    return ((string)(this[this.tablekalk_podstawa.CPZColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.CPZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wspSoc {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wspSocColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wspSocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CenaRbh {
                get {
                    return ((string)(this[this.tablekalk_podstawa.CenaRbhColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.CenaRbhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wartoscWykrawania {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wartoscWykrawaniaColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wartoscWykrawaniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string czasUsunieciaMicro {
                get {
                    return ((string)(this[this.tablekalk_podstawa.czasUsunieciaMicroColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.czasUsunieciaMicroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string wartoscGratowania {
                get {
                    return ((string)(this[this.tablekalk_podstawa.wartoscGratowaniaColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.wartoscGratowaniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gratowanie {
                get {
                    return ((string)(this[this.tablekalk_podstawa.gratowanieColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.gratowanieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nkj {
                get {
                    return ((string)(this[this.tablekalk_podstawa.nkjColumn]));
                }
                set {
                    this[this.tablekalk_podstawa.nkjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string normaWartosc {
                get {
                    try {
                        return ((string)(this[this.tablekalk_podstawa.normaWartoscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'normaWartosc\' in table \'kalk_podstawa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekalk_podstawa.normaWartoscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnormaWartoscNull() {
                return this.IsNull(this.tablekalk_podstawa.normaWartoscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnormaWartoscNull() {
                this[this.tablekalk_podstawa.normaWartoscColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class v_listaKalkulacjiRow : global::System.Data.DataRow {
            
            private v_listaKalkulacjiDataTable tablev_listaKalkulacji;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal v_listaKalkulacjiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablev_listaKalkulacji = ((v_listaKalkulacjiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tablev_listaKalkulacji.idColumn]));
                }
                set {
                    this[this.tablev_listaKalkulacji.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Numer_Zapytania {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Numer_ZapytaniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numer_Zapytania\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Numer_ZapytaniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Indeks_CDN_XL {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Indeks_CDN_XLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Indeks_CDN_XL\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Indeks_CDN_XLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Numer_Rysunku {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Numer_RysunkuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numer_Rysunku\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Numer_RysunkuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Klient {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.KlientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Klient\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.KlientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Wielkosc_Zamowienia {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Wielkosc_ZamowieniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wielkosc_Zamowienia\' in table \'v_listaKalkulacji\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Wielkosc_ZamowieniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Wielkosc_Produkcji {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Wielkosc_ProdukcjiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wielkosc_Produkcji\' in table \'v_listaKalkulacji\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Wielkosc_ProdukcjiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Grubosc_Materialu {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Grubosc_MaterialuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grubosc_Materialu\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Grubosc_MaterialuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rodzaj_Materialu {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Rodzaj_MaterialuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rodzaj_Materialu\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Rodzaj_MaterialuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Wymiar_X {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Wymiar_XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wymiar_X\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Wymiar_XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Wymiar_Y {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.Wymiar_YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wymiar_Y\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.Wymiar_YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rewizja {
                get {
                    try {
                        return ((string)(this[this.tablev_listaKalkulacji.RewizjaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rewizja\' in table \'v_listaKalkulacji\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablev_listaKalkulacji.RewizjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumer_ZapytaniaNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Numer_ZapytaniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumer_ZapytaniaNull() {
                this[this.tablev_listaKalkulacji.Numer_ZapytaniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIndeks_CDN_XLNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Indeks_CDN_XLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIndeks_CDN_XLNull() {
                this[this.tablev_listaKalkulacji.Indeks_CDN_XLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumer_RysunkuNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Numer_RysunkuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumer_RysunkuNull() {
                this[this.tablev_listaKalkulacji.Numer_RysunkuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlientNull() {
                return this.IsNull(this.tablev_listaKalkulacji.KlientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlientNull() {
                this[this.tablev_listaKalkulacji.KlientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWielkosc_ZamowieniaNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Wielkosc_ZamowieniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWielkosc_ZamowieniaNull() {
                this[this.tablev_listaKalkulacji.Wielkosc_ZamowieniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWielkosc_ProdukcjiNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Wielkosc_ProdukcjiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWielkosc_ProdukcjiNull() {
                this[this.tablev_listaKalkulacji.Wielkosc_ProdukcjiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrubosc_MaterialuNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Grubosc_MaterialuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrubosc_MaterialuNull() {
                this[this.tablev_listaKalkulacji.Grubosc_MaterialuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRodzaj_MaterialuNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Rodzaj_MaterialuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRodzaj_MaterialuNull() {
                this[this.tablev_listaKalkulacji.Rodzaj_MaterialuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWymiar_XNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Wymiar_XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWymiar_XNull() {
                this[this.tablev_listaKalkulacji.Wymiar_XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWymiar_YNull() {
                return this.IsNull(this.tablev_listaKalkulacji.Wymiar_YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWymiar_YNull() {
                this[this.tablev_listaKalkulacji.Wymiar_YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRewizjaNull() {
                return this.IsNull(this.tablev_listaKalkulacji.RewizjaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRewizjaNull() {
                this[this.tablev_listaKalkulacji.RewizjaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class kalk_podstawaRowChangeEvent : global::System.EventArgs {
            
            private kalk_podstawaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRowChangeEvent(kalk_podstawaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public kalk_podstawaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class v_listaKalkulacjiRowChangeEvent : global::System.EventArgs {
            
            private v_listaKalkulacjiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRowChangeEvent(v_listaKalkulacjiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_listaKalkulacjiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ExcelWorkbook2.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class kalk_podstawaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public kalk_podstawaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "kalk_podstawa";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("indeks", "indeks");
            tableMapping.ColumnMappings.Add("nrZapytania", "nrZapytania");
            tableMapping.ColumnMappings.Add("klient", "klient");
            tableMapping.ColumnMappings.Add("trudnosc", "trudnosc");
            tableMapping.ColumnMappings.Add("nrRys", "nrRys");
            tableMapping.ColumnMappings.Add("rewizja", "rewizja");
            tableMapping.ColumnMappings.Add("iloscNaKpl", "iloscNaKpl");
            tableMapping.ColumnMappings.Add("wielkoscZam", "wielkoscZam");
            tableMapping.ColumnMappings.Add("wielkoscProd", "wielkoscProd");
            tableMapping.ColumnMappings.Add("grMat", "grMat");
            tableMapping.ColumnMappings.Add("wymY", "wymY");
            tableMapping.ColumnMappings.Add("wymX", "wymX");
            tableMapping.ColumnMappings.Add("rodzajMat", "rodzajMat");
            tableMapping.ColumnMappings.Add("gestosc", "gestosc");
            tableMapping.ColumnMappings.Add("sztukArk", "sztukArk");
            tableMapping.ColumnMappings.Add("norma", "norma");
            tableMapping.ColumnMappings.Add("cenaKg", "cenaKg");
            tableMapping.ColumnMappings.Add("wartoscMat", "wartoscMat");
            tableMapping.ColumnMappings.Add("iloscUd", "iloscUd");
            tableMapping.ColumnMappings.Add("udSek", "udSek");
            tableMapping.ColumnMappings.Add("czasNaZal", "czasNaZal");
            tableMapping.ColumnMappings.Add("CPZ", "CPZ");
            tableMapping.ColumnMappings.Add("wspSoc", "wspSoc");
            tableMapping.ColumnMappings.Add("CenaRbh", "CenaRbh");
            tableMapping.ColumnMappings.Add("wartoscWykrawania", "wartoscWykrawania");
            tableMapping.ColumnMappings.Add("czasUsunieciaMicro", "czasUsunieciaMicro");
            tableMapping.ColumnMappings.Add("wartoscGratowania", "wartoscGratowania");
            tableMapping.ColumnMappings.Add("gratowanie", "gratowanie");
            tableMapping.ColumnMappings.Add("nkj", "nkj");
            tableMapping.ColumnMappings.Add("normaWartosc", "normaWartosc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [kalk_podstawa] WHERE (([id] = @Original_id) AND ([indeks] = @Original_indeks) AND ([nrZapytania] = @Original_nrZapytania) AND ([klient] = @Original_klient) AND ([trudnosc] = @Original_trudnosc) AND ([nrRys] = @Original_nrRys) AND ([rewizja] = @Original_rewizja) AND ([iloscNaKpl] = @Original_iloscNaKpl) AND ([wielkoscZam] = @Original_wielkoscZam) AND ([wielkoscProd] = @Original_wielkoscProd) AND ([grMat] = @Original_grMat) AND ([wymY] = @Original_wymY) AND ([wymX] = @Original_wymX) AND ([rodzajMat] = @Original_rodzajMat) AND ([gestosc] = @Original_gestosc) AND ([sztukArk] = @Original_sztukArk) AND ([norma] = @Original_norma) AND ([cenaKg] = @Original_cenaKg) AND ([wartoscMat] = @Original_wartoscMat) AND ([iloscUd] = @Original_iloscUd) AND ([udSek] = @Original_udSek) AND ([czasNaZal] = @Original_czasNaZal) AND ([CPZ] = @Original_CPZ) AND ([wspSoc] = @Original_wspSoc) AND ([CenaRbh] = @Original_CenaRbh) AND ([wartoscWykrawania] = @Original_wartoscWykrawania) AND ([czasUsunieciaMicro] = @Original_czasUsunieciaMicro) AND ([wartoscGratowania] = @Original_wartoscGratowania) AND ([gratowanie] = @Original_gratowanie) AND ([nkj] = @Original_nkj) AND ((@IsNull_normaWartosc = 1 AND [normaWartosc] IS NULL) OR ([normaWartosc] = @Original_normaWartosc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_indeks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indeks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nrZapytania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrZapytania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_klient", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "klient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trudnosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trudnosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nrRys", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrRys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rewizja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rewizja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iloscNaKpl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscNaKpl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wielkoscZam", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscZam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wielkoscProd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wymY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wymX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rodzajMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzajMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gestosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gestosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sztukArk", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sztukArk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_norma", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "norma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cenaKg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cenaKg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iloscUd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscUd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_udSek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "udSek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_czasNaZal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasNaZal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wspSoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wspSoc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CenaRbh", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenaRbh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscWykrawania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscWykrawania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_czasUsunieciaMicro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasUsunieciaMicro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscGratowania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscGratowania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gratowanie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratowanie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nkj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nkj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_normaWartosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_normaWartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [kalk_podstawa] ([id], [indeks], [nrZapytania], [klient], [trudnosc], [nrRys], [rewizja], [iloscNaKpl], [wielkoscZam], [wielkoscProd], [grMat], [wymY], [wymX], [rodzajMat], [gestosc], [sztukArk], [norma], [cenaKg], [wartoscMat], [iloscUd], [udSek], [czasNaZal], [CPZ], [wspSoc], [CenaRbh], [wartoscWykrawania], [czasUsunieciaMicro], [wartoscGratowania], [gratowanie], [nkj], [normaWartosc]) VALUES (@id, @indeks, @nrZapytania, @klient, @trudnosc, @nrRys, @rewizja, @iloscNaKpl, @wielkoscZam, @wielkoscProd, @grMat, @wymY, @wymX, @rodzajMat, @gestosc, @sztukArk, @norma, @cenaKg, @wartoscMat, @iloscUd, @udSek, @czasNaZal, @CPZ, @wspSoc, @CenaRbh, @wartoscWykrawania, @czasUsunieciaMicro, @wartoscGratowania, @gratowanie, @nkj, @normaWartosc);
SELECT id, indeks, nrZapytania, klient, trudnosc, nrRys, rewizja, iloscNaKpl, wielkoscZam, wielkoscProd, grMat, wymY, wymX, rodzajMat, gestosc, sztukArk, norma, cenaKg, wartoscMat, iloscUd, udSek, czasNaZal, CPZ, wspSoc, CenaRbh, wartoscWykrawania, czasUsunieciaMicro, wartoscGratowania, gratowanie, nkj, normaWartosc FROM kalk_podstawa WHERE (id = @id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indeks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indeks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nrZapytania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrZapytania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@klient", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "klient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trudnosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trudnosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nrRys", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrRys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rewizja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rewizja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iloscNaKpl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscNaKpl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wielkoscZam", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscZam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wielkoscProd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wymY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wymX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rodzajMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzajMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gestosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gestosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sztukArk", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sztukArk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@norma", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "norma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cenaKg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cenaKg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iloscUd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscUd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@udSek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "udSek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@czasNaZal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasNaZal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wspSoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wspSoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CenaRbh", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenaRbh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscWykrawania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscWykrawania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@czasUsunieciaMicro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasUsunieciaMicro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscGratowania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscGratowania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gratowanie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratowanie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nkj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nkj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@normaWartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [kalk_podstawa] SET [id] = @id, [indeks] = @indeks, [nrZapytania] = @nrZap" +
                "ytania, [klient] = @klient, [trudnosc] = @trudnosc, [nrRys] = @nrRys, [rewizja] " +
                "= @rewizja, [iloscNaKpl] = @iloscNaKpl, [wielkoscZam] = @wielkoscZam, [wielkoscP" +
                "rod] = @wielkoscProd, [grMat] = @grMat, [wymY] = @wymY, [wymX] = @wymX, [rodzajM" +
                "at] = @rodzajMat, [gestosc] = @gestosc, [sztukArk] = @sztukArk, [norma] = @norma" +
                ", [cenaKg] = @cenaKg, [wartoscMat] = @wartoscMat, [iloscUd] = @iloscUd, [udSek] " +
                "= @udSek, [czasNaZal] = @czasNaZal, [CPZ] = @CPZ, [wspSoc] = @wspSoc, [CenaRbh] " +
                "= @CenaRbh, [wartoscWykrawania] = @wartoscWykrawania, [czasUsunieciaMicro] = @cz" +
                "asUsunieciaMicro, [wartoscGratowania] = @wartoscGratowania, [gratowanie] = @grat" +
                "owanie, [nkj] = @nkj, [normaWartosc] = @normaWartosc WHERE (([id] = @Original_id" +
                ") AND ([indeks] = @Original_indeks) AND ([nrZapytania] = @Original_nrZapytania) " +
                "AND ([klient] = @Original_klient) AND ([trudnosc] = @Original_trudnosc) AND ([nr" +
                "Rys] = @Original_nrRys) AND ([rewizja] = @Original_rewizja) AND ([iloscNaKpl] = " +
                "@Original_iloscNaKpl) AND ([wielkoscZam] = @Original_wielkoscZam) AND ([wielkosc" +
                "Prod] = @Original_wielkoscProd) AND ([grMat] = @Original_grMat) AND ([wymY] = @O" +
                "riginal_wymY) AND ([wymX] = @Original_wymX) AND ([rodzajMat] = @Original_rodzajM" +
                "at) AND ([gestosc] = @Original_gestosc) AND ([sztukArk] = @Original_sztukArk) AN" +
                "D ([norma] = @Original_norma) AND ([cenaKg] = @Original_cenaKg) AND ([wartoscMat" +
                "] = @Original_wartoscMat) AND ([iloscUd] = @Original_iloscUd) AND ([udSek] = @Or" +
                "iginal_udSek) AND ([czasNaZal] = @Original_czasNaZal) AND ([CPZ] = @Original_CPZ" +
                ") AND ([wspSoc] = @Original_wspSoc) AND ([CenaRbh] = @Original_CenaRbh) AND ([wa" +
                "rtoscWykrawania] = @Original_wartoscWykrawania) AND ([czasUsunieciaMicro] = @Ori" +
                "ginal_czasUsunieciaMicro) AND ([wartoscGratowania] = @Original_wartoscGratowania" +
                ") AND ([gratowanie] = @Original_gratowanie) AND ([nkj] = @Original_nkj) AND ((@I" +
                "sNull_normaWartosc = 1 AND [normaWartosc] IS NULL) OR ([normaWartosc] = @Origina" +
                "l_normaWartosc)));\r\nSELECT id, indeks, nrZapytania, klient, trudnosc, nrRys, rew" +
                "izja, iloscNaKpl, wielkoscZam, wielkoscProd, grMat, wymY, wymX, rodzajMat, gesto" +
                "sc, sztukArk, norma, cenaKg, wartoscMat, iloscUd, udSek, czasNaZal, CPZ, wspSoc," +
                " CenaRbh, wartoscWykrawania, czasUsunieciaMicro, wartoscGratowania, gratowanie, " +
                "nkj, normaWartosc FROM kalk_podstawa WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@indeks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indeks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nrZapytania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrZapytania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@klient", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "klient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trudnosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trudnosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nrRys", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrRys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rewizja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rewizja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iloscNaKpl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscNaKpl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wielkoscZam", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscZam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wielkoscProd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wymY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wymX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rodzajMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzajMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gestosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gestosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sztukArk", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sztukArk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@norma", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "norma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cenaKg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cenaKg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscMat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iloscUd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscUd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@udSek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "udSek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@czasNaZal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasNaZal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wspSoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wspSoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CenaRbh", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenaRbh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscWykrawania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscWykrawania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@czasUsunieciaMicro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasUsunieciaMicro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscGratowania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscGratowania", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gratowanie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratowanie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nkj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nkj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@normaWartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_indeks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "indeks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nrZapytania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrZapytania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_klient", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "klient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trudnosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trudnosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nrRys", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nrRys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rewizja", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rewizja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iloscNaKpl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscNaKpl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wielkoscZam", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscZam", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wielkoscProd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wielkoscProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wymY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wymX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wymX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rodzajMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzajMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gestosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gestosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sztukArk", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sztukArk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_norma", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "norma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cenaKg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cenaKg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscMat", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscMat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iloscUd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iloscUd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_udSek", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "udSek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_czasNaZal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasNaZal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPZ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wspSoc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wspSoc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CenaRbh", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CenaRbh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscWykrawania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscWykrawania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_czasUsunieciaMicro", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "czasUsunieciaMicro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscGratowania", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscGratowania", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gratowanie", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gratowanie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nkj", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nkj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_normaWartosc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_normaWartosc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "normaWartosc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExcelWorkbook2.Properties.Settings.Default.kalkulacjeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from kalk_podstawa";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.kalk_podstawaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.kalk_podstawaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.kalk_podstawaDataTable dataTable = new DataSet1.kalk_podstawaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.kalk_podstawaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "kalk_podstawa");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    string Original_indeks, 
                    string Original_nrZapytania, 
                    string Original_klient, 
                    string Original_trudnosc, 
                    string Original_nrRys, 
                    string Original_rewizja, 
                    string Original_iloscNaKpl, 
                    string Original_wielkoscZam, 
                    string Original_wielkoscProd, 
                    string Original_grMat, 
                    string Original_wymY, 
                    string Original_wymX, 
                    string Original_rodzajMat, 
                    string Original_gestosc, 
                    string Original_sztukArk, 
                    string Original_norma, 
                    string Original_cenaKg, 
                    string Original_wartoscMat, 
                    string Original_iloscUd, 
                    string Original_udSek, 
                    string Original_czasNaZal, 
                    string Original_CPZ, 
                    string Original_wspSoc, 
                    string Original_CenaRbh, 
                    string Original_wartoscWykrawania, 
                    string Original_czasUsunieciaMicro, 
                    string Original_wartoscGratowania, 
                    string Original_gratowanie, 
                    string Original_nkj, 
                    string Original_normaWartosc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_indeks == null)) {
                throw new global::System.ArgumentNullException("Original_indeks");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_indeks));
            }
            if ((Original_nrZapytania == null)) {
                throw new global::System.ArgumentNullException("Original_nrZapytania");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nrZapytania));
            }
            if ((Original_klient == null)) {
                throw new global::System.ArgumentNullException("Original_klient");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_klient));
            }
            if ((Original_trudnosc == null)) {
                throw new global::System.ArgumentNullException("Original_trudnosc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_trudnosc));
            }
            if ((Original_nrRys == null)) {
                throw new global::System.ArgumentNullException("Original_nrRys");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_nrRys));
            }
            if ((Original_rewizja == null)) {
                throw new global::System.ArgumentNullException("Original_rewizja");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_rewizja));
            }
            if ((Original_iloscNaKpl == null)) {
                throw new global::System.ArgumentNullException("Original_iloscNaKpl");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_iloscNaKpl));
            }
            if ((Original_wielkoscZam == null)) {
                throw new global::System.ArgumentNullException("Original_wielkoscZam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_wielkoscZam));
            }
            if ((Original_wielkoscProd == null)) {
                throw new global::System.ArgumentNullException("Original_wielkoscProd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_wielkoscProd));
            }
            if ((Original_grMat == null)) {
                throw new global::System.ArgumentNullException("Original_grMat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_grMat));
            }
            if ((Original_wymY == null)) {
                throw new global::System.ArgumentNullException("Original_wymY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_wymY));
            }
            if ((Original_wymX == null)) {
                throw new global::System.ArgumentNullException("Original_wymX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_wymX));
            }
            if ((Original_rodzajMat == null)) {
                throw new global::System.ArgumentNullException("Original_rodzajMat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_rodzajMat));
            }
            if ((Original_gestosc == null)) {
                throw new global::System.ArgumentNullException("Original_gestosc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_gestosc));
            }
            if ((Original_sztukArk == null)) {
                throw new global::System.ArgumentNullException("Original_sztukArk");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_sztukArk));
            }
            if ((Original_norma == null)) {
                throw new global::System.ArgumentNullException("Original_norma");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_norma));
            }
            if ((Original_cenaKg == null)) {
                throw new global::System.ArgumentNullException("Original_cenaKg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_cenaKg));
            }
            if ((Original_wartoscMat == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscMat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_wartoscMat));
            }
            if ((Original_iloscUd == null)) {
                throw new global::System.ArgumentNullException("Original_iloscUd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_iloscUd));
            }
            if ((Original_udSek == null)) {
                throw new global::System.ArgumentNullException("Original_udSek");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_udSek));
            }
            if ((Original_czasNaZal == null)) {
                throw new global::System.ArgumentNullException("Original_czasNaZal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_czasNaZal));
            }
            if ((Original_CPZ == null)) {
                throw new global::System.ArgumentNullException("Original_CPZ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CPZ));
            }
            if ((Original_wspSoc == null)) {
                throw new global::System.ArgumentNullException("Original_wspSoc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_wspSoc));
            }
            if ((Original_CenaRbh == null)) {
                throw new global::System.ArgumentNullException("Original_CenaRbh");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_CenaRbh));
            }
            if ((Original_wartoscWykrawania == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscWykrawania");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_wartoscWykrawania));
            }
            if ((Original_czasUsunieciaMicro == null)) {
                throw new global::System.ArgumentNullException("Original_czasUsunieciaMicro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_czasUsunieciaMicro));
            }
            if ((Original_wartoscGratowania == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscGratowania");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_wartoscGratowania));
            }
            if ((Original_gratowanie == null)) {
                throw new global::System.ArgumentNullException("Original_gratowanie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_gratowanie));
            }
            if ((Original_nkj == null)) {
                throw new global::System.ArgumentNullException("Original_nkj");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_nkj));
            }
            if ((Original_normaWartosc == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_normaWartosc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int id, 
                    string indeks, 
                    string nrZapytania, 
                    string klient, 
                    string trudnosc, 
                    string nrRys, 
                    string rewizja, 
                    string iloscNaKpl, 
                    string wielkoscZam, 
                    string wielkoscProd, 
                    string grMat, 
                    string wymY, 
                    string wymX, 
                    string rodzajMat, 
                    string gestosc, 
                    string sztukArk, 
                    string norma, 
                    string cenaKg, 
                    string wartoscMat, 
                    string iloscUd, 
                    string udSek, 
                    string czasNaZal, 
                    string CPZ, 
                    string wspSoc, 
                    string CenaRbh, 
                    string wartoscWykrawania, 
                    string czasUsunieciaMicro, 
                    string wartoscGratowania, 
                    string gratowanie, 
                    string nkj, 
                    string normaWartosc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(id));
            if ((indeks == null)) {
                throw new global::System.ArgumentNullException("indeks");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(indeks));
            }
            if ((nrZapytania == null)) {
                throw new global::System.ArgumentNullException("nrZapytania");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(nrZapytania));
            }
            if ((klient == null)) {
                throw new global::System.ArgumentNullException("klient");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(klient));
            }
            if ((trudnosc == null)) {
                throw new global::System.ArgumentNullException("trudnosc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(trudnosc));
            }
            if ((nrRys == null)) {
                throw new global::System.ArgumentNullException("nrRys");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(nrRys));
            }
            if ((rewizja == null)) {
                throw new global::System.ArgumentNullException("rewizja");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(rewizja));
            }
            if ((iloscNaKpl == null)) {
                throw new global::System.ArgumentNullException("iloscNaKpl");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(iloscNaKpl));
            }
            if ((wielkoscZam == null)) {
                throw new global::System.ArgumentNullException("wielkoscZam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(wielkoscZam));
            }
            if ((wielkoscProd == null)) {
                throw new global::System.ArgumentNullException("wielkoscProd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(wielkoscProd));
            }
            if ((grMat == null)) {
                throw new global::System.ArgumentNullException("grMat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(grMat));
            }
            if ((wymY == null)) {
                throw new global::System.ArgumentNullException("wymY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(wymY));
            }
            if ((wymX == null)) {
                throw new global::System.ArgumentNullException("wymX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(wymX));
            }
            if ((rodzajMat == null)) {
                throw new global::System.ArgumentNullException("rodzajMat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(rodzajMat));
            }
            if ((gestosc == null)) {
                throw new global::System.ArgumentNullException("gestosc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(gestosc));
            }
            if ((sztukArk == null)) {
                throw new global::System.ArgumentNullException("sztukArk");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(sztukArk));
            }
            if ((norma == null)) {
                throw new global::System.ArgumentNullException("norma");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(norma));
            }
            if ((cenaKg == null)) {
                throw new global::System.ArgumentNullException("cenaKg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(cenaKg));
            }
            if ((wartoscMat == null)) {
                throw new global::System.ArgumentNullException("wartoscMat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(wartoscMat));
            }
            if ((iloscUd == null)) {
                throw new global::System.ArgumentNullException("iloscUd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(iloscUd));
            }
            if ((udSek == null)) {
                throw new global::System.ArgumentNullException("udSek");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(udSek));
            }
            if ((czasNaZal == null)) {
                throw new global::System.ArgumentNullException("czasNaZal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(czasNaZal));
            }
            if ((CPZ == null)) {
                throw new global::System.ArgumentNullException("CPZ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CPZ));
            }
            if ((wspSoc == null)) {
                throw new global::System.ArgumentNullException("wspSoc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(wspSoc));
            }
            if ((CenaRbh == null)) {
                throw new global::System.ArgumentNullException("CenaRbh");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(CenaRbh));
            }
            if ((wartoscWykrawania == null)) {
                throw new global::System.ArgumentNullException("wartoscWykrawania");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(wartoscWykrawania));
            }
            if ((czasUsunieciaMicro == null)) {
                throw new global::System.ArgumentNullException("czasUsunieciaMicro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(czasUsunieciaMicro));
            }
            if ((wartoscGratowania == null)) {
                throw new global::System.ArgumentNullException("wartoscGratowania");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(wartoscGratowania));
            }
            if ((gratowanie == null)) {
                throw new global::System.ArgumentNullException("gratowanie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(gratowanie));
            }
            if ((nkj == null)) {
                throw new global::System.ArgumentNullException("nkj");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(nkj));
            }
            if ((normaWartosc == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(normaWartosc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int id, 
                    string indeks, 
                    string nrZapytania, 
                    string klient, 
                    string trudnosc, 
                    string nrRys, 
                    string rewizja, 
                    string iloscNaKpl, 
                    string wielkoscZam, 
                    string wielkoscProd, 
                    string grMat, 
                    string wymY, 
                    string wymX, 
                    string rodzajMat, 
                    string gestosc, 
                    string sztukArk, 
                    string norma, 
                    string cenaKg, 
                    string wartoscMat, 
                    string iloscUd, 
                    string udSek, 
                    string czasNaZal, 
                    string CPZ, 
                    string wspSoc, 
                    string CenaRbh, 
                    string wartoscWykrawania, 
                    string czasUsunieciaMicro, 
                    string wartoscGratowania, 
                    string gratowanie, 
                    string nkj, 
                    string normaWartosc, 
                    int Original_id, 
                    string Original_indeks, 
                    string Original_nrZapytania, 
                    string Original_klient, 
                    string Original_trudnosc, 
                    string Original_nrRys, 
                    string Original_rewizja, 
                    string Original_iloscNaKpl, 
                    string Original_wielkoscZam, 
                    string Original_wielkoscProd, 
                    string Original_grMat, 
                    string Original_wymY, 
                    string Original_wymX, 
                    string Original_rodzajMat, 
                    string Original_gestosc, 
                    string Original_sztukArk, 
                    string Original_norma, 
                    string Original_cenaKg, 
                    string Original_wartoscMat, 
                    string Original_iloscUd, 
                    string Original_udSek, 
                    string Original_czasNaZal, 
                    string Original_CPZ, 
                    string Original_wspSoc, 
                    string Original_CenaRbh, 
                    string Original_wartoscWykrawania, 
                    string Original_czasUsunieciaMicro, 
                    string Original_wartoscGratowania, 
                    string Original_gratowanie, 
                    string Original_nkj, 
                    string Original_normaWartosc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(id));
            if ((indeks == null)) {
                throw new global::System.ArgumentNullException("indeks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(indeks));
            }
            if ((nrZapytania == null)) {
                throw new global::System.ArgumentNullException("nrZapytania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(nrZapytania));
            }
            if ((klient == null)) {
                throw new global::System.ArgumentNullException("klient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(klient));
            }
            if ((trudnosc == null)) {
                throw new global::System.ArgumentNullException("trudnosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(trudnosc));
            }
            if ((nrRys == null)) {
                throw new global::System.ArgumentNullException("nrRys");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(nrRys));
            }
            if ((rewizja == null)) {
                throw new global::System.ArgumentNullException("rewizja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(rewizja));
            }
            if ((iloscNaKpl == null)) {
                throw new global::System.ArgumentNullException("iloscNaKpl");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(iloscNaKpl));
            }
            if ((wielkoscZam == null)) {
                throw new global::System.ArgumentNullException("wielkoscZam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(wielkoscZam));
            }
            if ((wielkoscProd == null)) {
                throw new global::System.ArgumentNullException("wielkoscProd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(wielkoscProd));
            }
            if ((grMat == null)) {
                throw new global::System.ArgumentNullException("grMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(grMat));
            }
            if ((wymY == null)) {
                throw new global::System.ArgumentNullException("wymY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(wymY));
            }
            if ((wymX == null)) {
                throw new global::System.ArgumentNullException("wymX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(wymX));
            }
            if ((rodzajMat == null)) {
                throw new global::System.ArgumentNullException("rodzajMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(rodzajMat));
            }
            if ((gestosc == null)) {
                throw new global::System.ArgumentNullException("gestosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(gestosc));
            }
            if ((sztukArk == null)) {
                throw new global::System.ArgumentNullException("sztukArk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(sztukArk));
            }
            if ((norma == null)) {
                throw new global::System.ArgumentNullException("norma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(norma));
            }
            if ((cenaKg == null)) {
                throw new global::System.ArgumentNullException("cenaKg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(cenaKg));
            }
            if ((wartoscMat == null)) {
                throw new global::System.ArgumentNullException("wartoscMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(wartoscMat));
            }
            if ((iloscUd == null)) {
                throw new global::System.ArgumentNullException("iloscUd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(iloscUd));
            }
            if ((udSek == null)) {
                throw new global::System.ArgumentNullException("udSek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(udSek));
            }
            if ((czasNaZal == null)) {
                throw new global::System.ArgumentNullException("czasNaZal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(czasNaZal));
            }
            if ((CPZ == null)) {
                throw new global::System.ArgumentNullException("CPZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CPZ));
            }
            if ((wspSoc == null)) {
                throw new global::System.ArgumentNullException("wspSoc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(wspSoc));
            }
            if ((CenaRbh == null)) {
                throw new global::System.ArgumentNullException("CenaRbh");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(CenaRbh));
            }
            if ((wartoscWykrawania == null)) {
                throw new global::System.ArgumentNullException("wartoscWykrawania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(wartoscWykrawania));
            }
            if ((czasUsunieciaMicro == null)) {
                throw new global::System.ArgumentNullException("czasUsunieciaMicro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(czasUsunieciaMicro));
            }
            if ((wartoscGratowania == null)) {
                throw new global::System.ArgumentNullException("wartoscGratowania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(wartoscGratowania));
            }
            if ((gratowanie == null)) {
                throw new global::System.ArgumentNullException("gratowanie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(gratowanie));
            }
            if ((nkj == null)) {
                throw new global::System.ArgumentNullException("nkj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(nkj));
            }
            if ((normaWartosc == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(normaWartosc));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_id));
            if ((Original_indeks == null)) {
                throw new global::System.ArgumentNullException("Original_indeks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_indeks));
            }
            if ((Original_nrZapytania == null)) {
                throw new global::System.ArgumentNullException("Original_nrZapytania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_nrZapytania));
            }
            if ((Original_klient == null)) {
                throw new global::System.ArgumentNullException("Original_klient");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_klient));
            }
            if ((Original_trudnosc == null)) {
                throw new global::System.ArgumentNullException("Original_trudnosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_trudnosc));
            }
            if ((Original_nrRys == null)) {
                throw new global::System.ArgumentNullException("Original_nrRys");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_nrRys));
            }
            if ((Original_rewizja == null)) {
                throw new global::System.ArgumentNullException("Original_rewizja");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_rewizja));
            }
            if ((Original_iloscNaKpl == null)) {
                throw new global::System.ArgumentNullException("Original_iloscNaKpl");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_iloscNaKpl));
            }
            if ((Original_wielkoscZam == null)) {
                throw new global::System.ArgumentNullException("Original_wielkoscZam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_wielkoscZam));
            }
            if ((Original_wielkoscProd == null)) {
                throw new global::System.ArgumentNullException("Original_wielkoscProd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_wielkoscProd));
            }
            if ((Original_grMat == null)) {
                throw new global::System.ArgumentNullException("Original_grMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_grMat));
            }
            if ((Original_wymY == null)) {
                throw new global::System.ArgumentNullException("Original_wymY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_wymY));
            }
            if ((Original_wymX == null)) {
                throw new global::System.ArgumentNullException("Original_wymX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_wymX));
            }
            if ((Original_rodzajMat == null)) {
                throw new global::System.ArgumentNullException("Original_rodzajMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_rodzajMat));
            }
            if ((Original_gestosc == null)) {
                throw new global::System.ArgumentNullException("Original_gestosc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_gestosc));
            }
            if ((Original_sztukArk == null)) {
                throw new global::System.ArgumentNullException("Original_sztukArk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_sztukArk));
            }
            if ((Original_norma == null)) {
                throw new global::System.ArgumentNullException("Original_norma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_norma));
            }
            if ((Original_cenaKg == null)) {
                throw new global::System.ArgumentNullException("Original_cenaKg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_cenaKg));
            }
            if ((Original_wartoscMat == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscMat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_wartoscMat));
            }
            if ((Original_iloscUd == null)) {
                throw new global::System.ArgumentNullException("Original_iloscUd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_iloscUd));
            }
            if ((Original_udSek == null)) {
                throw new global::System.ArgumentNullException("Original_udSek");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_udSek));
            }
            if ((Original_czasNaZal == null)) {
                throw new global::System.ArgumentNullException("Original_czasNaZal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_czasNaZal));
            }
            if ((Original_CPZ == null)) {
                throw new global::System.ArgumentNullException("Original_CPZ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_CPZ));
            }
            if ((Original_wspSoc == null)) {
                throw new global::System.ArgumentNullException("Original_wspSoc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_wspSoc));
            }
            if ((Original_CenaRbh == null)) {
                throw new global::System.ArgumentNullException("Original_CenaRbh");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_CenaRbh));
            }
            if ((Original_wartoscWykrawania == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscWykrawania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_wartoscWykrawania));
            }
            if ((Original_czasUsunieciaMicro == null)) {
                throw new global::System.ArgumentNullException("Original_czasUsunieciaMicro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_czasUsunieciaMicro));
            }
            if ((Original_wartoscGratowania == null)) {
                throw new global::System.ArgumentNullException("Original_wartoscGratowania");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_wartoscGratowania));
            }
            if ((Original_gratowanie == null)) {
                throw new global::System.ArgumentNullException("Original_gratowanie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_gratowanie));
            }
            if ((Original_nkj == null)) {
                throw new global::System.ArgumentNullException("Original_nkj");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_nkj));
            }
            if ((Original_normaWartosc == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_normaWartosc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string indeks, 
                    string nrZapytania, 
                    string klient, 
                    string trudnosc, 
                    string nrRys, 
                    string rewizja, 
                    string iloscNaKpl, 
                    string wielkoscZam, 
                    string wielkoscProd, 
                    string grMat, 
                    string wymY, 
                    string wymX, 
                    string rodzajMat, 
                    string gestosc, 
                    string sztukArk, 
                    string norma, 
                    string cenaKg, 
                    string wartoscMat, 
                    string iloscUd, 
                    string udSek, 
                    string czasNaZal, 
                    string CPZ, 
                    string wspSoc, 
                    string CenaRbh, 
                    string wartoscWykrawania, 
                    string czasUsunieciaMicro, 
                    string wartoscGratowania, 
                    string gratowanie, 
                    string nkj, 
                    string normaWartosc, 
                    int Original_id, 
                    string Original_indeks, 
                    string Original_nrZapytania, 
                    string Original_klient, 
                    string Original_trudnosc, 
                    string Original_nrRys, 
                    string Original_rewizja, 
                    string Original_iloscNaKpl, 
                    string Original_wielkoscZam, 
                    string Original_wielkoscProd, 
                    string Original_grMat, 
                    string Original_wymY, 
                    string Original_wymX, 
                    string Original_rodzajMat, 
                    string Original_gestosc, 
                    string Original_sztukArk, 
                    string Original_norma, 
                    string Original_cenaKg, 
                    string Original_wartoscMat, 
                    string Original_iloscUd, 
                    string Original_udSek, 
                    string Original_czasNaZal, 
                    string Original_CPZ, 
                    string Original_wspSoc, 
                    string Original_CenaRbh, 
                    string Original_wartoscWykrawania, 
                    string Original_czasUsunieciaMicro, 
                    string Original_wartoscGratowania, 
                    string Original_gratowanie, 
                    string Original_nkj, 
                    string Original_normaWartosc) {
            return this.Update(Original_id, indeks, nrZapytania, klient, trudnosc, nrRys, rewizja, iloscNaKpl, wielkoscZam, wielkoscProd, grMat, wymY, wymX, rodzajMat, gestosc, sztukArk, norma, cenaKg, wartoscMat, iloscUd, udSek, czasNaZal, CPZ, wspSoc, CenaRbh, wartoscWykrawania, czasUsunieciaMicro, wartoscGratowania, gratowanie, nkj, normaWartosc, Original_id, Original_indeks, Original_nrZapytania, Original_klient, Original_trudnosc, Original_nrRys, Original_rewizja, Original_iloscNaKpl, Original_wielkoscZam, Original_wielkoscProd, Original_grMat, Original_wymY, Original_wymX, Original_rodzajMat, Original_gestosc, Original_sztukArk, Original_norma, Original_cenaKg, Original_wartoscMat, Original_iloscUd, Original_udSek, Original_czasNaZal, Original_CPZ, Original_wspSoc, Original_CenaRbh, Original_wartoscWykrawania, Original_czasUsunieciaMicro, Original_wartoscGratowania, Original_gratowanie, Original_nkj, Original_normaWartosc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class v_listaKalkulacjiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public v_listaKalkulacjiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "v_listaKalkulacji";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("Numer_Zapytania", "Numer_Zapytania");
            tableMapping.ColumnMappings.Add("Indeks_CDN_XL", "Indeks_CDN_XL");
            tableMapping.ColumnMappings.Add("Numer_Rysunku", "Numer_Rysunku");
            tableMapping.ColumnMappings.Add("Klient", "Klient");
            tableMapping.ColumnMappings.Add("Wielkosc_Zamowienia", "Wielkosc_Zamowienia");
            tableMapping.ColumnMappings.Add("Wielkosc_Produkcji", "Wielkosc_Produkcji");
            tableMapping.ColumnMappings.Add("Grubosc_Materialu", "Grubosc_Materialu");
            tableMapping.ColumnMappings.Add("Rodzaj_Materialu", "Rodzaj_Materialu");
            tableMapping.ColumnMappings.Add("Wymiar_X", "Wymiar_X");
            tableMapping.ColumnMappings.Add("Wymiar_Y", "Wymiar_Y");
            tableMapping.ColumnMappings.Add("Rewizja", "Rewizja");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExcelWorkbook2.Properties.Settings.Default.kalkulacjeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select *\r\nfrom [dbo].[v_listaKalkulacji]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.v_listaKalkulacjiDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.v_listaKalkulacjiDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.v_listaKalkulacjiDataTable dataTable = new DataSet1.v_listaKalkulacjiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private kalk_podstawaTableAdapter _kalk_podstawaTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public kalk_podstawaTableAdapter kalk_podstawaTableAdapter {
            get {
                return this._kalk_podstawaTableAdapter;
            }
            set {
                this._kalk_podstawaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._kalk_podstawaTableAdapter != null) 
                            && (this._kalk_podstawaTableAdapter.Connection != null))) {
                    return this._kalk_podstawaTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._kalk_podstawaTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kalk_podstawaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.kalk_podstawa.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kalk_podstawaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kalk_podstawaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.kalk_podstawa.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kalk_podstawaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._kalk_podstawaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.kalk_podstawa.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kalk_podstawaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._kalk_podstawaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kalk_podstawaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._kalk_podstawaTableAdapter != null)) {
                    revertConnections.Add(this._kalk_podstawaTableAdapter, this._kalk_podstawaTableAdapter.Connection);
                    this._kalk_podstawaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._kalk_podstawaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._kalk_podstawaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kalk_podstawaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kalk_podstawaTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._kalk_podstawaTableAdapter != null)) {
                    this._kalk_podstawaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._kalk_podstawaTableAdapter]));
                    this._kalk_podstawaTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591